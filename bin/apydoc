#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""Dead simple API documentation generation tool

Usage:
    apydoc [options] <path>

Options:
    -h, --help
    -d, --debug
    -t TPL, --template TPL
    -o OUT, --output OUT
    --list-tpl
    -i, --index
"""

import os
import sys
import logging
import inspect
from docopt import docopt
import apydoc


log = logging.getLogger('apydoc')


def main():
    """Main function of the apydoc"""

    modules = dict()
    if os.path.isfile(opt['<path>']):
        log.debug('processing file %s', opt['<path>'])
        out = apydoc.process_file(opt['<path>'])
        print(out)
        modules[out['name']] = out
    elif os.path.isdir(opt['<path>']):
        log.debug('processing dir %s', opt['<path>'])
        name = os.path.basename(opt['<path>'])
        modules = apydoc.process_directory(opt['<path>'], name)
    else:
        log.debug('processing module %s', opt['<path>'])
        out = apydoc.process_module(opt['<path>'])
        modules[out.name] = out

    if opt['--index']:
        template, ext = apydoc.load_template(opt['--template'], ttype='index')

    template, ext = apydoc.load_template(opt['--template'], ttype='module')
    for key in sorted(modules.keys()):
        mod = modules[key]

        output = os.path.join(opt['--output'], key + '.' + ext)
        with open(output, 'w') as f:
            f.write(template.render(module=mod, footer=footer, trim_blocks=True, lstrip_block=True))
        log.info('Generated %s to %s', key, output)



footer = 'API documentation generated by [apydoc](https://github.com/liborw/apydoc).'

if __name__ == "__main__":
    opt = docopt(__doc__)
    logging.basicConfig(level='DEBUG' if opt['--debug'] else 'INFO')
    main()


